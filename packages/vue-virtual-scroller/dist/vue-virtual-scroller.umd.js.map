{"version":3,"file":"vue-virtual-scroller.umd.js","sources":["../src/config.js","../../../node_modules/vue-resize/dist/vue-resize.esm.js","../../../node_modules/vue-observe-visibility/dist/vue-observe-visibility.esm.js","../../../node_modules/scrollparent/scrollparent.js","../src/components/common.js","../src/utils.js","../src/components/RecycleScroller.vue","../src/components/DynamicScroller.vue","../src/components/DynamicScrollerItem.vue","../src/mixins/IdState.js","../src/index.js"],"sourcesContent":["export default {\n  itemsLimit: 1000,\n}\n","function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function (node, ps) {\n    if (node.parentNode === null) { return ps; }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function (node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function (node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function (node) {\n   return regex.test(overflow(node));\n  };\n\n  var scrollParent = function (node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return ;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n}));\n","export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n\n  direction: {\n    type: String,\n    default: 'vertical',\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\n  },\n\n  listTag: {\n    type: String,\n    default: 'div',\n  },\n\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    class=\"vue-recycle-scroller\"\n    :class=\"{\n      ready,\n      'page-mode': pageMode,\n      [`direction-${direction}`]: true,\n    }\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      ref=\"before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <component\n      :is=\"listTag\"\n      ref=\"wrapper\"\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n      :class=\"listClass\"\n    >\n      <component\n        :is=\"itemTag\"\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"ready ? {\n          transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px) translate${direction === 'vertical' ? 'X' : 'Y'}(${view.offset}px)`,\n          width: gridItems ? `${direction === 'vertical' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n          height: gridItems ? `${direction === 'horizontal' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n        } : null\"\n        class=\"vue-recycle-scroller__item-view\"\n        :class=\"[\n          itemClass,\n          {\n            hover: !skipHover && hoverKey === view.nr.key\n          },\n        ]\"\n        v-on=\"skipHover ? {} : {\n          mouseenter: () => { hoverKey = view.nr.key },\n          mouseleave: () => { hoverKey = null },\n        }\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </component>\n\n      <slot\n        name=\"empty\"\n      />\n    </component>\n\n    <div\n      v-if=\"$slots.after\"\n      ref=\"after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    gridItems: {\n      type: Number,\n      default: undefined,\n    },\n\n    itemSecondarySize: {\n      type: Number,\n      default: undefined,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n\n    skipHover: {\n      type: Boolean,\n      default: false,\n    },\n\n    listTag: {\n      type: String,\n      default: 'div',\n    },\n\n    itemTag: {\n      type: String,\n      default: 'div',\n    },\n\n    listClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n\n    itemClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n\n    gridItems () {\n      this.updateVisibleItems(true)\n    },\n\n    itemSecondarySize () {\n      this.updateVisibleItems(true)\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n\n    if (this.gridItems && !this.itemSize) {\n      console.error('[vue-recycle-scroller] You must provide an itemSize when using gridItems')\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  activated () {\n    const lastPosition = this.$_lastUpdateScrollPosition\n    if (typeof lastPosition === 'number') {\n      this.$nextTick(() => {\n        this.scrollToPosition(lastPosition)\n      })\n    }\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const gridItems = this.gridItems || 1\n      const itemSecondarySize = this.itemSecondarySize || itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n      let visibleStartIndex, visibleEndIndex\n\n      if (!count) {\n        startIndex = endIndex = visibleStartIndex = visibleEndIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = visibleStartIndex = 0\n        endIndex = visibleEndIndex = Math.min(this.prerender, items.length)\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // account for leading slot\n        let beforeSize = 0\n        if (this.$refs.before) {\n          beforeSize = this.$refs.before.scrollHeight\n          scroll.start -= beforeSize\n        }\n\n        // account for trailing slot\n        if (this.$refs.after) {\n          const afterSize = this.$refs.after.scrollHeight\n          scroll.end += afterSize\n        }\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n\n          // search visible startIndex\n          for (visibleStartIndex = startIndex; visibleStartIndex < count && (beforeSize + sizes[visibleStartIndex].accumulator) < scroll.start; visibleStartIndex++);\n\n          // search visible endIndex\n          for (visibleEndIndex = visibleStartIndex; visibleEndIndex < count && (beforeSize + sizes[visibleEndIndex].accumulator) < scroll.end; visibleEndIndex++);\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize * gridItems)\n          const remainer = startIndex % gridItems\n          startIndex -= remainer\n          endIndex = Math.ceil(scroll.end / itemSize * gridItems)\n          visibleStartIndex = Math.max(0, Math.floor((scroll.start - beforeSize) / itemSize * gridItems))\n          visibleEndIndex = Math.floor((scroll.end - beforeSize) / itemSize * gridItems)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n          visibleStartIndex < 0 && (visibleStartIndex = 0)\n          visibleEndIndex > count && (visibleEndIndex = count)\n\n          totalSize = Math.ceil(count / gridItems) * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.indexOf(view.item)\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          if (i === items.length - 1) this.$emit('scroll-end')\n          if (i === 0) this.$emit('scroll-start')\n\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n          view.offset = 0\n        } else {\n          view.position = Math.floor(i / gridItems) * itemSize\n          view.offset = (i % gridItems) * itemSecondarySize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex, visibleStartIndex, visibleEndIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\n        ? {\n            passive: true,\n          }\n        : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      const direction = this.direction === 'vertical'\n        ? { scroll: 'scrollTop', start: 'top' }\n        : { scroll: 'scrollLeft', start: 'left' }\n\n      let viewport\n      let scrollDirection\n      let scrollDistance\n\n      if (this.pageMode) {\n        const viewportEl = ScrollParent(this.$el)\n        // HTML doesn't overflow like other elements\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\n        const bounds = viewportEl.getBoundingClientRect()\n\n        const scroller = this.$el.getBoundingClientRect()\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\n\n        viewport = viewportEl\n        scrollDirection = direction.scroll\n        scrollDistance = position + scrollTop + scrollerPosition\n      } else {\n        viewport = this.$el\n        scrollDirection = direction.scroll\n        scrollDistance = position\n      }\n\n      viewport[scrollDirection] = scrollDistance\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n","<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    :direction=\"direction\"\n    key-field=\"id\"\n    :list-tag=\"listTag\"\n    :item-tag=\"itemTag\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n    <template slot=\"empty\">\n      <slot name=\"empty\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      const l = items.length\n      for (let i = 0; i < l; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n\n    itemsWithSize (next, prev) {\n      const scrollTop = this.$el.scrollTop\n\n      // Calculate total diff between prev and next sizes\n      // over current scroll top. Then add it to scrollTop to\n      // avoid jumping the contents that the user is seeing.\n      let prevActiveTop = 0; let activeTop = 0\n      const length = Math.min(next.length, prev.length)\n      for (let i = 0; i < length; i++) {\n        if (prevActiveTop >= scrollTop) {\n          break\n        }\n        prevActiveTop += prev[i].size || this.minItemSize\n        activeTop += next[i].size || this.minItemSize\n      }\n      const offset = activeTop - prevActiveTop\n\n      if (offset === 0) {\n        return\n      }\n\n      this.$el.scrollTop += offset\n    },\n  },\n\n  beforeCreate () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      const scroller = this.$refs.scroller\n      if (scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index) {\n      const scroller = this.$refs.scroller\n      if (scroller) scroller.scrollToItem(index)\n    },\n\n    getItemSize (item, index = undefined) {\n      const id = this.simpleArray ? (index != null ? index : this.items.indexOf(item)) : item[this.keyField]\n      return this.vscrollData.sizes[id] || 0\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n  },\n}\n</script>\n","<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      if (this.vscrollData.simpleArray) return this.index\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.item.hasOwnProperty(this.vscrollData.keyField)) return this.item[this.vscrollData.keyField]\n      throw new Error(`keyField '${this.vscrollData.keyField}' not found in your item. You should set a valid keyField prop on your Scroller`)\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData && !this.vscrollResizeObserver) {\n        this.$_watchData = this.$watch('item', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = ~~(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver || !this.$el.parentNode) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n","import Vue from 'vue'\n\nexport default function ({\n  idProp = vm => vm.item.id,\n} = {}) {\n  const store = {}\n  const vm = new Vue({\n    data () {\n      return {\n        store,\n      }\n    },\n  })\n\n  // @vue/component\n  return {\n    data () {\n      return {\n        idState: null,\n      }\n    },\n\n    created () {\n      this.$_id = null\n      if (typeof idProp === 'function') {\n        this.$_getId = () => idProp.call(this, this)\n      } else {\n        this.$_getId = () => this[idProp]\n      }\n      this.$watch(this.$_getId, {\n        handler (value) {\n          this.$nextTick(() => {\n            this.$_id = value\n          })\n        },\n        immediate: true,\n      })\n      this.$_updateIdState()\n    },\n\n    beforeUpdate () {\n      this.$_updateIdState()\n    },\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit (id) {\n        const factory = this.$options.idState\n        if (typeof factory === 'function') {\n          const data = factory.call(this, this)\n          vm.$set(store, id, data)\n          this.$_id = id\n          return data\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\n        }\n      },\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState () {\n        const id = this.$_getId()\n        if (id == null) {\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id)\n          }\n          this.idState = store[id]\n        }\n      },\n    },\n  }\n}\n","import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n"],"names":["itemsLimit","getInternetExplorerVersion","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","trident","rv","edge","isIE","initCompat","init","ResizeObserver","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","staticRenderFns","_scopeId","name","methods","compareAndNotify","_w","$el","offsetWidth","offsetHeight","$emit","addResizeHandlers","_resizeObject","contentDocument","defaultView","addEventListener","removeResizeHandlers","onload","removeEventListener","mounted","_this","$nextTick","object","document","createElement","setAttribute","type","appendChild","data","beforeDestroy","install","Vue","component","plugin","version","GlobalVue","global","use","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","processOptions","value","options","callback","throttle","delay","arguments","undefined","timeout","lastState","currentArgs","throttled","state","_len","args","_key","leading","apply","concat","clearTimeout","setTimeout","_clear","deepEqual","val1","val2","VisibilityState","el","vnode","observer","frozen","createObserver","destroyObserver","result","entry","once","_ref","throttleOptions","_leading","oldResult","IntersectionObserver","entries","intersectingEntry","find","e","isIntersecting","intersectionRatio","threshold","intersection","context","observe","disconnect","get","bind","_ref2","console","warn","_vue_visibilityState","update","_ref3","oldValue","unbind","ObserveVisibility","directive","root","factory","module","exports","Scrollparent","this","regex","parents","node","ps","parentNode","style","prop","getComputedStyle","getPropertyValue","overflow","scroll","test","scrollParent","HTMLElement","SVGElement","scrollingElement","documentElement","items","required","keyField","String","default","direction","validator","includes","listTag","itemTag","simpleArray","supportsPassive","opts","idProp","vm","item","id","store","idState","created","$_id","$_getId","$watch","handler","immediate","$_updateIdState","beforeUpdate","$_idStateInit","$options","$set","Error","registerComponents","prefix","RecycleScroller","DynamicScroller","DynamicScrollerItem","VERSION","finalOptions","assign","installComponents","componentsPrefix","config"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAnFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA;;;EAtCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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"}